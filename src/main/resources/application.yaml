# Server Configuration
server:
  port: 8080

# Spring Cloud API Gateway Configuration
spring:
  application:
    name: spring-cloud-api-gateway

  docker:
    compose:
      enabled: true
      file: compose.yml
      

  cloud:
    gateway:

      # Global filters
      default-filters: 
        - RequestIdFilter # Custom filter to add a unique request ID to each request

      routes:
        # CREATE: Allow only POST on /posts
        - id: posts-service-create
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts
            - Method=POST

        # READ ALL: Allow only GET on /posts
        - id: posts-service-list
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts
            - Method=GET

        # READ ONE: Allow only GET on /posts/{id}
        - id: posts-service-get-by-id
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts/{segment}
            - Method=GET
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 5
                redis-rate-limiter.requestedTokens: 2
                
        # Allow GET and PUT on /posts/{id} (get and update)
        # UPDATE: Allow only PUT on /posts/{id}
        - id: posts-service-update-by-id
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts/{segment}
            - Method=PUT

        # DELETE: Allow only DELETE on /posts/{id}
        - id: posts-service-delete-by-id
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts/{segment}
            - Method=DELETE

        # Allow only GET on /posts/{id}/comments
        - id: posts-service-get-comments-by-post
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/posts/{segment}/comments
            - Method=GET


        # Allow only GET on /comments with postId query param
        - id: comments-service
          uri: https://jsonplaceholder.typicode.com
          predicates:
            - Path=/comments
            - Method=GET
            - Query=postId, [0-9]+

  # Redis Rate Limiter Configuration
  data:
    redis:
      host: localhost
      port: 6379


# Zipkin Tracing Configuration
management:
  tracing:
    sampling:
      probability: 1.0 # 100% sampling, adjust as needed
    enabled: true

  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans # Default Zipkin endpoint



# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.boot.autoconfigure.web: DEBUG
    reactor.netty: DEBUG
    redisratelimiter: DEBUG